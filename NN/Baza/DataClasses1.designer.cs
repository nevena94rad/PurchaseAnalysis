#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Baza
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PED")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTrainingData(TrainingData instance);
    partial void UpdateTrainingData(TrainingData instance);
    partial void DeleteTrainingData(TrainingData instance);
    partial void InsertPurchasePrediction(PurchasePrediction instance);
    partial void UpdatePurchasePrediction(PurchasePrediction instance);
    partial void DeletePurchasePrediction(PurchasePrediction instance);
    partial void InsertTraining(Training instance);
    partial void UpdateTraining(Training instance);
    partial void DeleteTraining(Training instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Baza.Properties.Settings.Default.PEDConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Analysi> Analysis
		{
			get
			{
				return this.GetTable<Analysi>();
			}
		}
		
		public System.Data.Linq.Table<TrainingData> TrainingDatas
		{
			get
			{
				return this.GetTable<TrainingData>();
			}
		}
		
		public System.Data.Linq.Table<ItemConsumption> ItemConsumptions
		{
			get
			{
				return this.GetTable<ItemConsumption>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseHistory> PurchaseHistories
		{
			get
			{
				return this.GetTable<PurchaseHistory>();
			}
		}
		
		public System.Data.Linq.Table<PurchasePeriod> PurchasePeriods
		{
			get
			{
				return this.GetTable<PurchasePeriod>();
			}
		}
		
		public System.Data.Linq.Table<PurchasePrediction> PurchasePredictions
		{
			get
			{
				return this.GetTable<PurchasePrediction>();
			}
		}
		
		public System.Data.Linq.Table<RecommendHistory> RecommendHistories
		{
			get
			{
				return this.GetTable<RecommendHistory>();
			}
		}
		
		public System.Data.Linq.Table<Training> Trainings
		{
			get
			{
				return this.GetTable<Training>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Analysis")]
	public partial class Analysi
	{
		
		private string _CustNo;
		
		private string _ItemNo;
		
		private int _DataPoints;
		
		private double _AvgPurchasePeriod;
		
		private double _MinPurchasePeriod;
		
		private double _MaxPurchasePeriod;
		
		private double _PurchasePeriodStDev;
		
		private double _NormalizedPurchasePeriodStDev;
		
		public Analysi()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this._CustNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPoints", DbType="Int NOT NULL")]
		public int DataPoints
		{
			get
			{
				return this._DataPoints;
			}
			set
			{
				if ((this._DataPoints != value))
				{
					this._DataPoints = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgPurchasePeriod", DbType="Float NOT NULL")]
		public double AvgPurchasePeriod
		{
			get
			{
				return this._AvgPurchasePeriod;
			}
			set
			{
				if ((this._AvgPurchasePeriod != value))
				{
					this._AvgPurchasePeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPurchasePeriod", DbType="Float NOT NULL")]
		public double MinPurchasePeriod
		{
			get
			{
				return this._MinPurchasePeriod;
			}
			set
			{
				if ((this._MinPurchasePeriod != value))
				{
					this._MinPurchasePeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPurchasePeriod", DbType="Float NOT NULL")]
		public double MaxPurchasePeriod
		{
			get
			{
				return this._MaxPurchasePeriod;
			}
			set
			{
				if ((this._MaxPurchasePeriod != value))
				{
					this._MaxPurchasePeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePeriodStDev", DbType="Float NOT NULL")]
		public double PurchasePeriodStDev
		{
			get
			{
				return this._PurchasePeriodStDev;
			}
			set
			{
				if ((this._PurchasePeriodStDev != value))
				{
					this._PurchasePeriodStDev = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedPurchasePeriodStDev", DbType="Float NOT NULL")]
		public double NormalizedPurchasePeriodStDev
		{
			get
			{
				return this._NormalizedPurchasePeriodStDev;
			}
			set
			{
				if ((this._NormalizedPurchasePeriodStDev != value))
				{
					this._NormalizedPurchasePeriodStDev = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrainingData")]
	public partial class TrainingData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _key;
		
		private int _numOfItemPurchases;
		
		private double _itemTwoPercent;
		
		private double _itemFivePercent;
		
		private double _itemTenPercent;
		
		private double _itemAbsouloutError;
		
		private int _numOfTotalPurchases;
		
		private double _totalTwoPercent;
		
		private double _totalFivePercent;
		
		private double _totalTenPercent;
		
		private double _totalAbsouloutError;
		
		private int _forecastCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkeyChanging(int value);
    partial void OnkeyChanged();
    partial void OnnumOfItemPurchasesChanging(int value);
    partial void OnnumOfItemPurchasesChanged();
    partial void OnitemTwoPercentChanging(double value);
    partial void OnitemTwoPercentChanged();
    partial void OnitemFivePercentChanging(double value);
    partial void OnitemFivePercentChanged();
    partial void OnitemTenPercentChanging(double value);
    partial void OnitemTenPercentChanged();
    partial void OnitemAbsouloutErrorChanging(double value);
    partial void OnitemAbsouloutErrorChanged();
    partial void OnnumOfTotalPurchasesChanging(int value);
    partial void OnnumOfTotalPurchasesChanged();
    partial void OntotalTwoPercentChanging(double value);
    partial void OntotalTwoPercentChanged();
    partial void OntotalFivePercentChanging(double value);
    partial void OntotalFivePercentChanged();
    partial void OntotalTenPercentChanging(double value);
    partial void OntotalTenPercentChanged();
    partial void OntotalAbsouloutErrorChanging(double value);
    partial void OntotalAbsouloutErrorChanged();
    partial void OnforecastCategoryChanging(int value);
    partial void OnforecastCategoryChanged();
    #endregion
		
		public TrainingData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfItemPurchases", DbType="Int NOT NULL")]
		public int numOfItemPurchases
		{
			get
			{
				return this._numOfItemPurchases;
			}
			set
			{
				if ((this._numOfItemPurchases != value))
				{
					this.OnnumOfItemPurchasesChanging(value);
					this.SendPropertyChanging();
					this._numOfItemPurchases = value;
					this.SendPropertyChanged("numOfItemPurchases");
					this.OnnumOfItemPurchasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemTwoPercent", DbType="Float NOT NULL")]
		public double itemTwoPercent
		{
			get
			{
				return this._itemTwoPercent;
			}
			set
			{
				if ((this._itemTwoPercent != value))
				{
					this.OnitemTwoPercentChanging(value);
					this.SendPropertyChanging();
					this._itemTwoPercent = value;
					this.SendPropertyChanged("itemTwoPercent");
					this.OnitemTwoPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemFivePercent", DbType="Float NOT NULL")]
		public double itemFivePercent
		{
			get
			{
				return this._itemFivePercent;
			}
			set
			{
				if ((this._itemFivePercent != value))
				{
					this.OnitemFivePercentChanging(value);
					this.SendPropertyChanging();
					this._itemFivePercent = value;
					this.SendPropertyChanged("itemFivePercent");
					this.OnitemFivePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemTenPercent", DbType="Float NOT NULL")]
		public double itemTenPercent
		{
			get
			{
				return this._itemTenPercent;
			}
			set
			{
				if ((this._itemTenPercent != value))
				{
					this.OnitemTenPercentChanging(value);
					this.SendPropertyChanging();
					this._itemTenPercent = value;
					this.SendPropertyChanged("itemTenPercent");
					this.OnitemTenPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemAbsouloutError", DbType="Float NOT NULL")]
		public double itemAbsouloutError
		{
			get
			{
				return this._itemAbsouloutError;
			}
			set
			{
				if ((this._itemAbsouloutError != value))
				{
					this.OnitemAbsouloutErrorChanging(value);
					this.SendPropertyChanging();
					this._itemAbsouloutError = value;
					this.SendPropertyChanged("itemAbsouloutError");
					this.OnitemAbsouloutErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfTotalPurchases", DbType="Int NOT NULL")]
		public int numOfTotalPurchases
		{
			get
			{
				return this._numOfTotalPurchases;
			}
			set
			{
				if ((this._numOfTotalPurchases != value))
				{
					this.OnnumOfTotalPurchasesChanging(value);
					this.SendPropertyChanging();
					this._numOfTotalPurchases = value;
					this.SendPropertyChanged("numOfTotalPurchases");
					this.OnnumOfTotalPurchasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTwoPercent", DbType="Float NOT NULL")]
		public double totalTwoPercent
		{
			get
			{
				return this._totalTwoPercent;
			}
			set
			{
				if ((this._totalTwoPercent != value))
				{
					this.OntotalTwoPercentChanging(value);
					this.SendPropertyChanging();
					this._totalTwoPercent = value;
					this.SendPropertyChanged("totalTwoPercent");
					this.OntotalTwoPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalFivePercent", DbType="Float NOT NULL")]
		public double totalFivePercent
		{
			get
			{
				return this._totalFivePercent;
			}
			set
			{
				if ((this._totalFivePercent != value))
				{
					this.OntotalFivePercentChanging(value);
					this.SendPropertyChanging();
					this._totalFivePercent = value;
					this.SendPropertyChanged("totalFivePercent");
					this.OntotalFivePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTenPercent", DbType="Float NOT NULL")]
		public double totalTenPercent
		{
			get
			{
				return this._totalTenPercent;
			}
			set
			{
				if ((this._totalTenPercent != value))
				{
					this.OntotalTenPercentChanging(value);
					this.SendPropertyChanging();
					this._totalTenPercent = value;
					this.SendPropertyChanged("totalTenPercent");
					this.OntotalTenPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalAbsouloutError", DbType="Float NOT NULL")]
		public double totalAbsouloutError
		{
			get
			{
				return this._totalAbsouloutError;
			}
			set
			{
				if ((this._totalAbsouloutError != value))
				{
					this.OntotalAbsouloutErrorChanging(value);
					this.SendPropertyChanging();
					this._totalAbsouloutError = value;
					this.SendPropertyChanged("totalAbsouloutError");
					this.OntotalAbsouloutErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forecastCategory", DbType="Int NOT NULL")]
		public int forecastCategory
		{
			get
			{
				return this._forecastCategory;
			}
			set
			{
				if ((this._forecastCategory != value))
				{
					this.OnforecastCategoryChanging(value);
					this.SendPropertyChanging();
					this._forecastCategory = value;
					this.SendPropertyChanged("forecastCategory");
					this.OnforecastCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemConsumption")]
	public partial class ItemConsumption
	{
		
		private string _ItemNo;
		
		private int _Date;
		
		private double _Consumption;
		
		public ItemConsumption()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Int NOT NULL")]
		public int Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consumption", DbType="Float NOT NULL")]
		public double Consumption
		{
			get
			{
				return this._Consumption;
			}
			set
			{
				if ((this._Consumption != value))
				{
					this._Consumption = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseHistory")]
	public partial class PurchaseHistory
	{
		
		private int _InvDate;
		
		private string _CustNo;
		
		private string _ItemNo;
		
		private int _InvQty;
		
		public PurchaseHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvDate", DbType="Int NOT NULL")]
		public int InvDate
		{
			get
			{
				return this._InvDate;
			}
			set
			{
				if ((this._InvDate != value))
				{
					this._InvDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this._CustNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvQty", DbType="Int NOT NULL")]
		public int InvQty
		{
			get
			{
				return this._InvQty;
			}
			set
			{
				if ((this._InvQty != value))
				{
					this._InvQty = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchasePeriods")]
	public partial class PurchasePeriod
	{
		
		private string _CustNo;
		
		private string _ItemNo;
		
		private System.DateTime _InvDateCurr;
		
		private System.DateTime _InvDatePrior;
		
		private int _PurchasePeriod1;
		
		public PurchasePeriod()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this._CustNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvDateCurr", DbType="Date NOT NULL")]
		public System.DateTime InvDateCurr
		{
			get
			{
				return this._InvDateCurr;
			}
			set
			{
				if ((this._InvDateCurr != value))
				{
					this._InvDateCurr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvDatePrior", DbType="Date NOT NULL")]
		public System.DateTime InvDatePrior
		{
			get
			{
				return this._InvDatePrior;
			}
			set
			{
				if ((this._InvDatePrior != value))
				{
					this._InvDatePrior = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PurchasePeriod", Storage="_PurchasePeriod1", DbType="Int NOT NULL")]
		public int PurchasePeriod1
		{
			get
			{
				return this._PurchasePeriod1;
			}
			set
			{
				if ((this._PurchasePeriod1 != value))
				{
					this._PurchasePeriod1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchasePrediction")]
	public partial class PurchasePrediction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustNo;
		
		private string _ItemNo;
		
		private int _ProcessingDate;
		
		private int _key;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustNoChanging(string value);
    partial void OnCustNoChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnProcessingDateChanging(int value);
    partial void OnProcessingDateChanged();
    partial void OnkeyChanging(int value);
    partial void OnkeyChanged();
    #endregion
		
		public PurchasePrediction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this.OnCustNoChanging(value);
					this.SendPropertyChanging();
					this._CustNo = value;
					this.SendPropertyChanged("CustNo");
					this.OnCustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingDate", DbType="Int NOT NULL")]
		public int ProcessingDate
		{
			get
			{
				return this._ProcessingDate;
			}
			set
			{
				if ((this._ProcessingDate != value))
				{
					this.OnProcessingDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessingDate = value;
					this.SendPropertyChanged("ProcessingDate");
					this.OnProcessingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecommendHistory")]
	public partial class RecommendHistory
	{
		
		private string _CustNo;
		
		private string _ItemNo;
		
		private int _ProcessingDate;
		
		public RecommendHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this._CustNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingDate", DbType="Int NOT NULL")]
		public int ProcessingDate
		{
			get
			{
				return this._ProcessingDate;
			}
			set
			{
				if ((this._ProcessingDate != value))
				{
					this._ProcessingDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training")]
	public partial class Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _key;
		
		private string _CustNo;
		
		private string _ItemNo;
		
		private int _from;
		
		private int _to;
		
		private int _occurred;
		
		private double _predictedConsumption;
		
		private int _lastInvQty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkeyChanging(int value);
    partial void OnkeyChanged();
    partial void OnCustNoChanging(string value);
    partial void OnCustNoChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnfromChanging(int value);
    partial void OnfromChanged();
    partial void OntoChanging(int value);
    partial void OntoChanged();
    partial void OnoccurredChanging(int value);
    partial void OnoccurredChanged();
    partial void OnpredictedConsumptionChanging(double value);
    partial void OnpredictedConsumptionChanged();
    partial void OnlastInvQtyChanging(int value);
    partial void OnlastInvQtyChanged();
    #endregion
		
		public Training()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this.OnCustNoChanging(value);
					this.SendPropertyChanging();
					this._CustNo = value;
					this.SendPropertyChanged("CustNo");
					this.OnCustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[from]", Storage="_from", DbType="Int NOT NULL")]
		public int from
		{
			get
			{
				return this._from;
			}
			set
			{
				if ((this._from != value))
				{
					this.OnfromChanging(value);
					this.SendPropertyChanging();
					this._from = value;
					this.SendPropertyChanged("from");
					this.OnfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[to]", Storage="_to", DbType="Int NOT NULL")]
		public int to
		{
			get
			{
				return this._to;
			}
			set
			{
				if ((this._to != value))
				{
					this.OntoChanging(value);
					this.SendPropertyChanging();
					this._to = value;
					this.SendPropertyChanged("to");
					this.OntoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occurred", DbType="Int NOT NULL")]
		public int occurred
		{
			get
			{
				return this._occurred;
			}
			set
			{
				if ((this._occurred != value))
				{
					this.OnoccurredChanging(value);
					this.SendPropertyChanging();
					this._occurred = value;
					this.SendPropertyChanged("occurred");
					this.OnoccurredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_predictedConsumption", DbType="Float NOT NULL")]
		public double predictedConsumption
		{
			get
			{
				return this._predictedConsumption;
			}
			set
			{
				if ((this._predictedConsumption != value))
				{
					this.OnpredictedConsumptionChanging(value);
					this.SendPropertyChanging();
					this._predictedConsumption = value;
					this.SendPropertyChanged("predictedConsumption");
					this.OnpredictedConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastInvQty", DbType="Int NOT NULL")]
		public int lastInvQty
		{
			get
			{
				return this._lastInvQty;
			}
			set
			{
				if ((this._lastInvQty != value))
				{
					this.OnlastInvQtyChanging(value);
					this.SendPropertyChanging();
					this._lastInvQty = value;
					this.SendPropertyChanged("lastInvQty");
					this.OnlastInvQtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
